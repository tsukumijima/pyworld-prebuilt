from numpy.typing import NDArray
from typing import Tuple


def dio(x: NDArray, fs: int, f0_floor: float = ..., f0_ceil: float = ..., channels_in_octave: float = ..., frame_period: float = ..., speed: int = ..., allowed_range: float = ...) -> Tuple[NDArray, NDArray]: ...

def harvest(x: NDArray, fs: int, f0_floor: float = ..., f0_ceil: float = ..., frame_period: float = ...) -> Tuple[NDArray, NDArray]: ...

def stonemask(x: NDArray, f0: NDArray, temporal_positions: NDArray, fs: int) -> NDArray: ...

def get_cheaptrick_fft_size(fs: int, f0_floor: float = ...) -> int: ...

def get_cheaptrick_f0_floor(fs: int, fft_size: int) -> float: ...

def cheaptrick(x: NDArray, f0: NDArray, temporal_positions: NDArray, fs: int, q1: float = ..., f0_floor: float = ..., fft_size: int = ...) -> NDArray: ...

def d4c(x: NDArray, f0: NDArray, temporal_positions: NDArray, fs: int, threshold: float = ..., fft_size: int = ...) -> NDArray: ...

def synthesize(f0: NDArray, spectrogram: NDArray, aperiodicity: NDArray, fs: int, frame_period: float = ...) -> NDArray: ...

def get_num_aperiodicities(fs: int) -> int: ...

def code_aperiodicity(aperiodicity: NDArray, fs: int) -> NDArray: ...

def decode_aperiodicity(coded_aperiodicity: NDArray, fs: int, fft_size: int) -> NDArray: ...

def code_spectral_envelope(spectrogram: NDArray, fs: int, number_of_dimensions: int) -> NDArray: ...

def decode_spectral_envelope(coded_spectral_envelope: NDArray, fs: int, fft_size: int) -> NDArray: ...

def wav2world(x: NDArray, fs: int, fft_size: int = ..., frame_period: float = ...) -> Tuple[NDArray, NDArray, NDArray]: ...
